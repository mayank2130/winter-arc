// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(cuid())
  clerkId        String        @unique
  email          String        @unique
  name           String?
  imageUrl       String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  links          Link[]
  subscription   Subscription?
  @@map("users")
}

enum SubscriptionType {
  WEEKLY
  MONTHLY
  YEARLY
}

model Subscription {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type      SubscriptionType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  links     Link[]
  @@map("subscriptions")
}

model Link {
  id             String   @id @default(cuid())
  shortCode      String   @unique
  originalUrl    String
  title          String?
  description    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  userId         String
  user           User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  subscriptionId String?
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)

  clicks         Click[]
  @@map("links")
}

model Click {
  id               String   @id @default(cuid())
  linkId           String
  link             Link     @relation(fields: [linkId], references: [id], onDelete: Cascade)
  ipAddress        String?
  userAgent        String?
  referer          String?
  referrerDomain   String?  // NEW: Domain that referred the click
  referrerSource   String?  // NEW: Specific source (Twitter, Facebook, Google, etc.)
  referrerMedium   String?  // NEW: Medium category (Social, Search, Email, etc.)
  referrerCampaign String?  // NEW: Campaign tracking (UTM parameters)
  country          String?
  device           String?
  createdAt        DateTime @default(now())

  @@map("clicks")
}
